apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-demo-deploy
  labels:
    app: kafka-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-demo
  template:
    metadata:
      labels:
        app: kafka-demo
        accessLevel: high
    spec:
      containers:
      - name: kafka-demo
        image: "dueruen/learning-kubernetes:kafka-demo-amd64"
        imagePullPolicy: "Always"
        ports:
          - name: http
            containerPort: 80
        env:
          - name: NAME
            value: "kafka-demo"
          - name: TRACE_ENDPOINT
            value: "scraper-service:80"
          - name: PORT
            value: "80"                            
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 80
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   periodSeconds: 15
        #   timeoutSeconds: 5
        # readinessProbe:
        #   httpGet:
        #     path: /readiness
        #     port: 80
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 1     
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-demo-service
  labels:
    app: kafka-demo
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      
  selector:
    app: kafka-demo