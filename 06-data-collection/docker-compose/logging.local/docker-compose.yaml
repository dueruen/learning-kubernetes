version: '3'

networks:
  loki:

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    container_name: otel
    command:
      - "--config=/etc/otel-collector-config.yaml"
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - loki      
    networks:
      - loki   

  loki:
    image: grafana/loki:2.5.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    # volumes:
    #   - ./loki-config.yaml:/etc/loki/loki-config.yaml   
    networks:
      - loki     

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - "3000:3000"
    networks:
      - loki 

  # flog:
  #   image: mingrammer/flog:0.4.3
  #   # Output 1 log per second in JSON format
  #   command: ["--format=json", "--loop", "--delay=1s", "--number=1"]
  #   networks:
  #     - loki
  #   depends_on:
  #     - otel-collector
  #   logging:
  #     driver: fluentd
  #     options:
  #       # Allow time for otel-collector to spin up, then forward fluentd logs to the fluentforwarder receiver.
  #       fluentd-async-connect: "true"
  #       # Use nanosecond precision
  #       fluentd-sub-second-precision: "true"     

  fluent-bit:
    image: fluent/fluent-bit
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    networks:
      - loki              