version: "3"
services:

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.49.0
    command: ["--config=/etc/otel-collector-config.yaml", ""]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./filename.json:/filename.json
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one

  kafka-consumer:
    build:
      dockerfile: Dockerfile
      context: ../../../application/performance-demo
    ports:
      - "8991:8991"
    environment:
      - KAFKA_BROKERS=kafka:19092
      - TOPIC=topic-test
      - OTEL_ENDPOINT=otel-collector:4317
      - SERVICE_NAME=consumer
      - INSTRUMENT=true
      - CONSUMER_WORK_TIME=true
      - CONSUMER_RANDOM_ERROR=true
      - APP_NAME=consumer
    depends_on:
      - otel-collector
      - kafka  

  kafka-producer:
    build:
      dockerfile: Dockerfile
      context: ../../../application/performance-demo
    ports:
      - "8992:8992"
    environment:
      - KAFKA_BROKERS=kafka:19092
      - TOPIC=topic-test
      - OTEL_ENDPOINT=otel-collector:4317
      - PRODUCER=true
      - SERVICE_NAME=producer
      - INSTRUMENT=true
      - MESSAGE_SIZE=100
      - MESSAGE_FREQUENCY=10
      - APP_NAME=producer
    depends_on:
      - otel-collector
      - kafka  

  # kafka-producer-02:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ../../../application/performance-demo
  #   ports:
  #     - "8993:8993"
  #   environment:
  #     - KAFKA_BROKERS=kafka:19092
  #     - TOPIC=topic-test
  #     - OTEL_ENDPOINT=otel-collector:4317
  #     - PRODUCER=true
  #     - SERVICE_NAME=producer
  #     - INSTRUMENT=true
  #     - MESSAGE_SIZE=100
  #     - MESSAGE_FREQUENCY=5
  #   depends_on:
  #     - otel-collector
  #     - kafka        

  # kafka:
  #   image: docker.io/wurstmeister/kafka:1.1.0
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - KAFKA_ADVERTISED_HOST_NAME=kafka
  #     - KAFKA_ZOOKEEPER_CONNECT=zook:2181
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CREATE_TOPICS="topic-test:1:1,topic-test-new:1:1"
  #     - KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS=60000
  #     - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS=60000
  #   depends_on:
  #     - zook      

  # zook:
  #   image: docker.io/cilium/zookeeper:1.0
  #   ports:
  #     - "2181:2181"       

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888

  kafka:
    # Kafka version 2.5.0
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo