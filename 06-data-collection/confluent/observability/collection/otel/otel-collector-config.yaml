---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  config.yaml: |-
    receivers:
      fluentforward:
        endpoint: 0.0.0.0:8006
      prometheus:
        config:
          scrape_configs:
            - job_name: "kube-state-metrics"
              scrape_interval: 5s
              static_configs:
                - targets: ["kube-state-metrics.default.svc.cluster.local:8888"]
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:55690                        
    processors:
      batch:
        timeout: 30s
        send_batch_size: 100    
      # k8sattributes processor to get the metadata from K8s
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.cluster.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
          # Pod labels which can be fetched via K8sattributeprocessor
          labels:
            - tag_name: key1
              key: label1
              from: pod
            - tag_name: key2
              key: label2
              from: pod
        # Pod association using resource attributes and connection
        pod_association:
          - from: resource_attribute
            name: k8s.pod.uid
          - from: resource_attribute
            name: k8s.pod.ip
          - from: connection
    exporters:
      loki:
        endpoint: http://loki-loki-simple-scalable-gateway.default.svc.cluster.local:80
        labels:
          attributes:
            kubernetes_namespace_name: "kubernetes_namespace_name"
            kubernetes_pod_name: "kubernetes_pod_name"
            kubernetes_host: "kubernetes_host"

      # jaeger:
      #   endpoint: jaeger-default-collector.jaeger.svc.cluster.local:14250
      #   tls:
      #     insecure: true
      
      logging:
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [logging]
        metrics:
          receivers: [prometheus]
          processors: [batch]          
          exporters: [logging]      
        logs:
          receivers: [fluentforward]
          processors: [k8sattributes,batch]
          exporters: [logging]
---